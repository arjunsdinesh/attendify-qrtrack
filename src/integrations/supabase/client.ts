
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ushmvfuczmqjjtwnqebp.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVzaG12ZnVjem1xamp0d25xZWJwIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDEyNzUwNzYsImV4cCI6MjA1Njg1MTA3Nn0.XJ-Xt_WOcu1Jbx6qFrMfJ265mPxNFo5dwj0eQb-PUUQ";

// Configure client with optimized options
export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true, // Enable session detection in URL
    storageKey: 'supabase.auth.token', // Ensure consistent storage key
  },
  realtime: {
    timeout: 20000, // Increased timeout for better connection stability
  },
  global: {
    fetch: (...args: Parameters<typeof fetch>) => fetch(...args),
  },
  db: {
    schema: 'public'
  }
});

// Optimized connection checking utility with retry logic
export const checkConnection = async (): Promise<boolean> => {
  try {
    const controller = new AbortController();
    const timeoutId = setTimeout(() => controller.abort(), 5000);
    
    // Use a simple count query to check connection
    const { data, error } = await supabase.from('profiles')
      .select('count', { count: 'exact', head: true })
      .abortSignal(controller.signal);
    
    clearTimeout(timeoutId);
    
    if (error) {
      console.error('Connection check failed with error:', error);
      return false;
    }
    
    console.log('Connection check successful');
    
    // Also validate attendance_sessions table connectivity
    const sessionsCheck = await supabase.from('attendance_sessions')
      .select('count', { count: 'exact', head: true })
      .limit(1);
      
    if (sessionsCheck.error) {
      console.error('Sessions table check failed:', sessionsCheck.error);
      // Still return true since the initial connection worked
    } else {
      console.log('Sessions table check successful');
    }
    
    return true;
  } catch (error) {
    console.error('Connection check exception:', error);
    return false;
  }
};

// Export a more specific function to check Supabase connection
export const checkSupabaseConnection = checkConnection;
